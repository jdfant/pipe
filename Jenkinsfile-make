pipeline {
  
  agent {
      node {
          label 'Standard-Builder'
      }
  }

  options {
      buildDiscarder logRotator(
                  daysToKeepStr: '7',
                  numToKeepStr: '10'
          )
  }

  stages {
    stage('Cleanup Workspace') {
        steps {
            cleanWs()
            sh """
            echo "Cleaned Up Workspace For Project"
            """
        }
    }

    stage('Code Checkout') {
        steps {
            checkout([
                $class: 'GitSCM',
                branches: [[name: '*/develop']],
                userRemoteConfigs: [[url: 'https://github.com/jdfant/pipe.git']]
            ])
        }
    }

/*
    stage('Shell script 0') {
      steps {
        sh '''
        scripts/build-ffmpeg.sh
        '''
      }
    }
*/
    stage('Version Testing') {
        steps {
            sh """
            echo "Checking Python versions"
            python --version
            python3 --version
            echo "Checking Gawk version"
            awk -V
            """
        }
    }

    stage('Unit Testing') {
        steps {
            sh """
            echo "Running Unit Tests"
            """
        }
    }

    stage('Code Analysis') {
        steps {
            sh """
            echo "Running Code Analysis"
            md5sum Jenkinsfile
            """
        }
    }

    stage('Build Deploy Code') {
        when {
            branch 'develop'
        }
        steps {
            sh """
            echo "Deploying Code to nowhere and everywhere, consecutively"
            """
        }
    }
    }   
}
